<!-- BEGIN PAGE LEVEL PLUGINS -->
<link href="../assets/global/plugins/datatables/datatables.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css" rel="stylesheet"
  type="text/css" />
<!-- END PAGE LEVEL PLUGINS -->
<!--<link href="assets/plugins/datatables/jquery.dataTables.min.css" rel="stylesheet">-->
<!--<link rel="stylesheet" href="assets/css/datatables-button.css"/>-->
<!-- <link href="https://cdn.datatables.net/t/dt/jszip-2.5.0,dt-1.10.11,b-1.1.2,b-colvis-1.1.2,b-html5-1.1.2,b-print-1.1.2/datatables.min.css" /> -->
<!-- <link href="https://cdn.datatables.net/buttons/1.1.2/css/buttons.dataTables.min.css" /> --}} -->
<!-- BEGIN PAGE LEVEL PLUGINS -->
<link href="../assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/bootstrap-toastr/toastr.min.css" rel="stylesheet" type="text/css" />
<!-- END PAGE LEVEL PLUGINS -->

<script>
  function isNumberKey(evt) {
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
      return false;
    return true;
  }
  function avoidSpace(event) {
    var k = event ? event.which : window.event.keyCode;
    if (k == 32) return false;
  }
</script>

<style>
  .full-width {
    width: 100% !important;
  }

  .fileinput {
    display: inline-block;
    margin-bottom: 25px;
  }

  .portlet.light.portlet-fit>.portlet-title {
    margin-bottom: 30px;
  }

  .notifyjs-corner {
    z-index: 999999 !important;
  }

  #storyDataTable .form-control {
    height: 20px;
  }

  #storyDataTable td,
  #storyDataTable th {
    padding: 0px 10px;
    text-align: center;
  }

  #storyDataTable td input {
    width: 100px;
    display: block;
    margin: 0 auto;
  }

  .actions .btn {
    margin: 0 5px;
    padding: 4px 20px !important;
    font-size: 13px !important;
    font-weight: 400 !important;
  }

  .last_row {
    margin-top: 30px;
  }
</style>

<div class="row">
  <div class="col-md-12">
    <div class="portlet light bordered">
      <div class="portlet-body">
        <ul class="nav nav-pills" style="margin-bottom: 15px;">
          <li class="active">
            <a href="#inputsTab" data-toggle="tab" aria-expanded="true"> Inputs </a>
          </li>
        </ul>
        <div class="tab-content">
          <div class="tab-pane fade active in" id="inputsTab">
            <div class="row">
              <div class="col-md-12">
                <!-- BEGIN PORTLET-->
                <div class="portlet light  portlet-fit  bordered">
                  <div class="portlet-title">
                    <h4>
                      <b>Upload PDF</b>
                    </h4>
                  </div>
                  <div class="portlet-body">
                    <form class="horizontal-form">
                      <div class="form-body">
                        <div class="row">
                          <div class="col-md-4 col-md-offset-4">
                            <label class="control-label" for="pdfFile">PDF File</label>
                            <div class="form-group">
                              <div class="">
                                <div class="fileinput fileinput-new full-width" data-provides="fileinput">
                                  <div class="input-group input-large full-width">
                                    <div class="form-control uneditable-input input-fixed input-medium full-width"
                                      data-trigger="fileinput">
                                      <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                      <span class="fileinput-filename"> </span>
                                    </div>
                                    <span class="input-group-addon btn default btn-file">
                                      <span class="fileinput-new"> Select file </span>
                                      <span class="fileinput-exists"> Change </span>
                                      <input type="file" id="pdfFile"> </span>
                                    <a href="javascript:;" class="input-group-addon btn red fileinput-exists"
                                      data-dismiss="fileinput">
                                      Remove </a>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                          <div class="col-md-4 col-md-offset-4">
                            <div class="form-group form-md-line-input">
                              <input type="text" id="pdfPassword" class="form-control">
                              <label for="password">Password (Optional)</label>
                            </div>
                          </div>
                          <div class="col-md-4 col-md-offset-4">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <select id="brokerType" class="form-control">
                                <option value="1">ADITYA BIRLA</option>
                                <option value="2">SMC GLOBAL</option>
                              </select>
                              <label for="brokerType">Broker Type</label>
                            </div>
                          </div>
                          <div class="col-md-4 col-md-offset-4">
                            <div class="form-group text-center">
                              <button class="btn btn-primary full-width" id="uploadpdfFile" type="button"
                                name="action">upload pdf file
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
                <!-- END PORTLET-->
              </div>
            </div>
            <div class="row">
              <div class="col-md-12">
                <!-- BEGIN PORTLET-->
                <div class="portlet light  portlet-fit  bordered">
                  <div class="portlet-title">
                    <h4>
                      <b>PDF DATA</b>
                    </h4>
                  </div>
                  <div class="portlet-body">
                    <form class="horizontal-form">
                      <div class="form-body">
                        <div class="row">
                          <div class="col-md-3">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="date" class="form-control">
                              <label for="date">Date</label>
                            </div>
                          </div>
                          <div class="col-md-3">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="broker" class="form-control">
                              <label for="broker">Broker</label>
                            </div>
                          </div>
                          <div class="col-md-3">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="cnnum" class="form-control">
                              <label for="cnnum">CN Num</label>
                            </div>
                          </div>
                        </div>
                        <div class="row">
                          <table class="table table-striped table-bordered dt-responsive wrap" cellspacing="0"
                            width="100%">
                            <thead>
                              <th>Transaction</th>
                              <th>Asset Name</th>
                              <th>Date</th>
                              <th>Quantity</th>
                              <th>Price</th>
                              <th>Brokerage/Unit</th>
                              <th>Amount</th>
                              <th>Comment</th>
                            </thead>
                            <tbody id="tableBody">
                            </tbody>
                          </table>
                        </div>
                        <div class="row last_row">
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="stt" class="form-control">
                              <label for="stt">STT</label>
                            </div>
                          </div>
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="stamp" class="form-control">
                              <label for="stamp">Stamp Charges</label>
                            </div>
                          </div>
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="other" class="form-control">
                              <label for="other">Other Charges</label>
                            </div>
                          </div>
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="gst" class="form-control">
                              <label for="gst">GST/S. Tax</label>
                            </div>
                          </div>
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="trans" class="form-control">
                              <label for="trans">Trans. Charges</label>
                            </div>
                          </div>
                          <div class="col-md-2">
                            <div class="form-group form-md-line-input form-md-floating-label">
                              <input type="text" readonly id="total" class="form-control">
                              <label for="total" class="font-weight-bold">Total Amount (Receivable)</label>
                            </div>
                          </div>
                        </div>
                      </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- <link href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.2/css/select2.min.css" rel="stylesheet" /> -->
      <!-- <link href="//cdnjs.cloudflare.com/ajax/libs/select2-bootstrap-theme/0.1.0-beta.10/select2-bootstrap.css" -->
      <!-- rel="stylesheet" /> -->
      <!-- <script src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.2/js/select2.min.js"></script> -->
      <script src="../assets/axios.min.js"></script>
      <!-- BEGIN PAGE LEVEL PLUGINS -->
      <script src="../assets/global/scripts/datatable.js" type="text/javascript"></script>
      <script src="../assets/global/plugins/datatables/datatables.min.js" type="text/javascript"></script>
      <script src="../assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js"
        type="text/javascript"></script>
      <!-- END PAGE LEVEL PLUGINS -->
      <script src="../assets/lodash.js"></script>
      <!-- <script -->
      <!-- src="https://cdn.datatables.net/t/dt/jszip-2.5.0,dt-1.10.11,b-1.1.2,b-colvis-1.1.2,b-html5-1.1.2,b-print-1.1.2/datatables.min.js"></script> -->
      <!-- BEGIN PAGE LEVEL SCRIPTS -->
      <script src="../assets/pages/scripts/table-datatables-responsive.min.js" type="text/javascript"></script>
      <!-- END PAGE LEVEL SCRIPTS -->
      <!-- BEGIN PAGE LEVEL PLUGINS -->
      <script src="../assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.js" type="text/javascript"></script>
      <script src="../assets/global/plugins/bootstrap-toastr/toastr.min.js" type="text/javascript"></script>
      <!-- END PAGE LEVEL PLUGINS -->

      <script>
        jQuery(document).ready(function () {
          $("#title").text("PDF Extraction | Dashboard")



          $("#pdfFile").change(function (evt) {
            pdfFileAttachment = evt.target.files[0];
          })

          $("#uploadpdfFile").on('click', function () {
            if ($('#pdfFile').val() == '') {
              swal({
                title: 'Error',
                type: 'error',
                text: 'Please Select File First'
              })
            } else {
              let sfExt = $('#pdfFile').val().split('.').pop().toLowerCase();
              if (sfExt !== 'pdf') {
                swal({
                  title: 'Error',
                  type: 'error',
                  text: 'Invalid File Type'
                })
              } else {
                $('#uploadpdfFile').text('Uploading...');
                $('#uploadpdfFile').prop('disabled', true);
                var formData = new FormData();
                formData.append('pdfFile', pdfFileAttachment);
                $.ajax({
                  url: '/uploadPdfFile',
                  type: 'post',
                  data: formData,
                  processData: false,
                  contentType: false,
                  success: function (response) {
                    // console.log(response)
                    if (response.resCode && response.resCode === '000') {
                      axios.post('/extractData', { password: $('#pdfPassword').val(), brokerType: $('#brokerType :selected').val() }).then(function (res) {
                        $('#uploadpdfFile').text('Upload pdf file');
                        $('#uploadpdfFile').prop('disabled', false);
                        if (res.data.resCode && res.data.resCode === '000') {
                          let data = res.data.resData
                          data = _.filter(data, function (obj) {
                            if (!(obj.str == '' || obj.str == ' ')) {
                              return obj
                            }
                          })
                          console.log(data)
                          if ($('#brokerType :selected').val() == 1) {
                            let indexBroker = _.findIndex(data, function (obj) {
                              return obj.str == 'CONTRACT NOTE CUM TAX INVOICE'
                            })
                            let indexDate = _.findIndex(data, function (obj) {
                              return obj.str == 'Trade Date'
                            })
                            let indexCnnum = _.findIndex(data, function (obj) {
                              return obj.str == 'Contract Note No.'
                            })
                            let setIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'Settlement Number'
                            })
                            let charges = _.keys(_.pickBy(data, { str: 'Total (Net)' }))
                            let indexSTT = Number(charges[0])
                            let indexGST = Number(charges[1])
                            $('#date').val(data[indexDate - 1].str)
                            $('#broker').val(data[indexBroker - 1].str)
                            $('#cnnum').val(data[indexCnnum - 2].str)
                            $('#stt').val(data[indexSTT - 2].str)
                            $('#stamp').val(data[indexSTT - 5].str)
                            let otherCharges = data[indexSTT - 7].str == 'NSE' ? data[indexSTT - 4].str : Number(data[indexSTT - 4].str) + Number(data[indexSTT - 6].str)
                            $('#other').val(otherCharges)
                            $('#trans').val(data[indexSTT - 3].str)
                            let gstCharges = Math.abs(Number(data[indexGST - 2].str) + Number(data[indexGST - 3].str) + Number(data[indexGST - 4].str))
                            $('#gst').val(gstCharges)
                            $('#total').val(Math.abs(Number(data[indexGST - 6].str.replace(',', ''))))
                            $('#tableBody').html('')
                            let y = data[setIndex + 1].y
                            console.log(y)
                            let increment = 12.24
                            while (true) {
                              let selectedData = _.filter(data, function (obj) {
                                if (obj.y == y) {
                                  return obj
                                }
                              })
                              if (selectedData.length < 2) { break; }
                              y += increment
                              y = Number(y.toFixed(4))
                              let name = selectedData[5].str
                              let date = data[indexDate - 1].str
                              let transaction = Number(selectedData[2].str) < 0 ? 'Sell' : 'Buy'
                              let quantity = Math.abs(Number(selectedData[2].str))
                              let price = Math.abs(Number(selectedData[1].str))
                              // console.log(selectedData[0].str.replace(',', ''))
                              let amount = Math.abs(Number(selectedData[0].str.replace(',', '')))
                              $('#tableBody').append(`
                                <tr>
                                  <td>${transaction}</td>
                                  <td>${name}</td>
                                  <td>${date}</td>
                                  <td>${quantity}</td>
                                  <td>${price}</td>
                                  <td></td>
                                  <td>${amount}</td>
                                  <td></td>
                                </tr>
                              `)
                            }
                          } else if ($('#brokerType :selected').val() == 2) {
                            let indexBroker = _.findIndex(data, function (obj) {
                              return obj.str == 'CONTRACT NOTE CUM TAX INVOICE'
                            })
                            let indexDate = _.findIndex(data, function (obj) {
                              return obj.str == 'Trade Date'
                            })
                            let indexCnnum = _.findIndex(data, function (obj) {
                              return obj.str == 'Contract Note No.'
                            })
                            let sstIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'STT'
                            })
                            let brokerageIndex = _.findLastIndex(data, function (obj) {
                              return obj.str == 'Brokerage'
                            })
                            let transIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'Transaction Charges'
                            })
                            let stampIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'Stamp Duty'
                            })
                            let otherIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'Taxable value of supply'
                            })
                            let gstIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'CGST@9%'
                            })
                            let amountIndex = _.findIndex(data, function (obj) {
                              return obj.str == 'Net amount'
                            })

                            $('#date').val(data[indexDate + 1].str)
                            $('#cnnum').val(data[indexCnnum + 1].str)
                            $('#broker').val(data[indexBroker + 2].str)

                            let initialRow = _.findIndex(data, function (obj) {
                              return obj.str == 'MTF'
                            })

                            let x = 13.9
                            let y = data[initialRow + 2].y
                            $('#tableBody').html('')
                            while (true) {
                              let rowIndex = _.findIndex(data, function (obj) {
                                return (obj.x == 13.9 && obj.y == y)
                              })
                              let nextObj10 = _.find(data, function (obj) {
                                return (obj.x == x && obj.y == y + 10)
                              })
                              let nextObj16 = _.find(data, function (obj) {
                                return (obj.x == x && obj.y == y + 16)
                              })
                              let nextObj20 = _.find(data, function (obj) {
                                return (obj.x == x && obj.y == y + 20)
                              })
                              let nextObj26 = _.find(data, function (obj) {
                                return (obj.x == x && obj.y == y + 26)
                              })

                              console.log('ROW INDEX => ', rowIndex)
                              let name = data[rowIndex + 4].str
                              rowIndex = data[rowIndex + 4].x == data[rowIndex + 5].x ? rowIndex + 1 : rowIndex
                              console.log(name)
                              console.log(nextObj10, nextObj16, nextObj20, nextObj26)
                              $('#tableBody').append(`
                                <tr>
                                  <td>${data[rowIndex + 5].str}</td>
                                  <td>${name}</td>
                                  <td>${data[indexDate + 1].str}</td>
                                  <td>${data[rowIndex + 6].str}</td>
                                  <td>${data[rowIndex + 8].str}</td>
                                  <td>${data[rowIndex + 9].str}</td>
                                  <td>${Math.abs(Number(data[rowIndex + 11].str))}</td>
                                  <td></td>
                                </tr>
                              `)

                              if (nextObj10 != undefined && nextObj10.str != 'Description') {
                                y = y + 10
                              } else if (nextObj16 != undefined && nextObj16.str != 'Description') {
                                y = y + 16
                              } else if (nextObj20 != undefined && nextObj20.str != 'Description') {
                                y = y + 20
                              } else if (nextObj26 != undefined && nextObj26.str != 'Description') {
                                y = y + 26
                              } else {
                                break
                              }
                            }
                            $('#stt').val(data[sstIndex + 2].str)
                            $('#stamp').val(data[stampIndex + 2].str)
                            console.log(data[brokerageIndex + 2].str, data[otherIndex + 2].str)
                            let otherCharges = Number(data[brokerageIndex + 2].str) + Number(data[otherIndex + 2].str)
                            $('#other').val(otherCharges)
                            $('#trans').val(data[transIndex + 2].str)
                            let gstCharges = Number(data[gstIndex + 2].str) * 2
                            $('#gst').val(gstCharges)
                            $('#total').val(Math.abs(Number(data[amountIndex + 2].str)))
                          }
                          // console.log(data)
                        } else {
                          swal({
                            title: 'Error ',
                            type: 'error',
                            text: res.data.resMessage
                          })
                        }

                      })
                    } else {
                      swal({
                        title: 'Error',
                        type: 'error',
                        text: response.resMessage
                      })
                    }
                  },
                  crossDomain: true
                });
              }
            }
          })
        })
      </script>